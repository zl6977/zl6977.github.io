<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2024-09 on ZZZ's Blogs</title><link>https://zl6977.github.io/tags/2024-09/</link><description>Recent content in 2024-09 on ZZZ's Blogs</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 04 Sep 2024 12:50:35 +0200</lastBuildDate><atom:link href="https://zl6977.github.io/tags/2024-09/index.xml" rel="self" type="application/rss+xml"/><item><title>Python requests lib throws SSL error in company network</title><link>https://zl6977.github.io/obsidian/python-requests-lib-throws-ssl-error-in-company-network/</link><pubDate>Tue, 03 Sep 2024 14:30:16 +0200</pubDate><guid>https://zl6977.github.io/obsidian/python-requests-lib-throws-ssl-error-in-company-network/</guid><description>&lt;h1 id="python-requests-lib-throws-ssl-error-in-company-network">Python requests lib throws SSL error in company network&lt;/h1>
&lt;h2 id="short-version简短版">Short version/简短版&lt;/h2>
&lt;p>Accessing an HTTPS URL using the Python requests library throws a self-signed error. However, accessing the URL in a browser is fine, and also fine on a private computer.
Based on Copilot&amp;rsquo;s answer, I understand that the root cause is proxy server interception and different clients using different certificate storage locations. This means that different certificate chains are created in different scenarios, some are valid and some are not.
The proxy server modifies the original certificate returned from the HTTPS server to generate a new certificate. This new certificate points to the proxy, and eventually to company&amp;rsquo;s root certificate.
This root certificate is self-signed and exists in the system&amp;rsquo;s own certificate manager, but not in the certificate manager used by the Python requests library. That&amp;rsquo;s why the Python requests library is prompting for a “self-signed cert error”.
So the solution is to add your company&amp;rsquo;s root certificate (which is the self-signed certificate that the requests lib prompts for) to the PEM file that Python is using, in order to make the new certificate chain valid.
A simple solution is: [[#Solution 2 Installing a lib]]. I did not try this, but it should work. If it doesn&amp;rsquo;t work, look at [[#Solution 1 Manual fix]].&lt;/p></description></item></channel></rss>